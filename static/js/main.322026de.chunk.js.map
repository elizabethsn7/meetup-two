{"version":3,"sources":["Event.js","EventList.js","mock-events.js","api.js","CitySearch.js","NumberOfEvents.js","App.js","serviceWorker.js","index.js"],"names":["Event","state","event","showDetails","handleShowDetails","setState","this","className","props","local_date","local_time","name","yes_rsvp_count","onClick","description","Component","EventList","events","map","key","id","mockEvents","created","duration","rsvp_limit","date_in_series_pattern","status","time","updated","utc_offset","waitlist_count","venue","lat","lon","repinned","address_1","city","country","localized_country_name","group","join_mode","urlname","who","localized_location","region","timezone","link","how_to_find_us","visibility","member_pay_fee","getSuggestions","query","a","window","location","href","startsWith","name_string","zip","getAccessToken","token","url","axios","get","result","data","getEvents","accessToken","localStorage","getItem","searchParams","URLSearchParams","search","code","getOrRenewAccessToken","lastSavedTime","Date","now","refreshToken","type","tokenInfo","setItem","access_token","refresh_token","CitySearch","suggestions","handleInputChanged","value","target","then","handleItemClicked","updateEvents","onChange","item","NumberOfEvents","amount","placeholder","App","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.322026de.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Event extends Component {\n  state = {\n    event: [],\n    showDetails: false\n  };\n\n  handleShowDetails = () => {\n    if (this.state.showDetails === false) {\n      this.setState({ showDetails: true });\n    } else {\n      this.setState({ showDetails: false });\n    }\n  };\n\n  render() {\n    const showDetails = this.state.showDetails;\n    return (\n      <div className=\"Event\">\n        <div className=\"detailsOverview\">\n          <p className=\"date\">Date: {this.props.event.local_date}</p>\n          <p className=\"time\">Time: {this.props.event.local_time}</p>\n          <p className=\"name\">Event Name: {this.props.event.name}</p>\n          <p className=\"attendeeNumber\">\n            Number Attending: {this.props.event.yes_rsvp_count}\n          </p>\n          <button\n            className=\"details-btn\"\n            onClick={() => this.handleShowDetails()}>\n            More Details\n          </button>\n        </div>\n        {showDetails && (\n          <div className=\"expandedDetails\">\n            <p className=\"description\">{this.props.event.description}</p>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Event;\n","import React, { Component } from 'react';\nimport Event from './Event';\n\nclass EventList extends Component {\n  render() {\n    return (\n      <ul className=\"EventList\">\n        {this.props.events.map(event => (\n          <li key={event.id}>\n            <Event event={event} />\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n\nexport default EventList;\n","const mockEvents = {\n  city: {\n    id: 1007700,\n    city: 'München',\n    lat: 48.14,\n    lon: 11.58,\n    state: '',\n    country: 'de',\n    zip: 'meetup3',\n    member_count: 1257\n  },\n  events: [\n    {\n      created: 1578477368000,\n      duration: 10800000,\n      id: '267743487',\n      name: 'AWS UG February Event',\n      rsvp_limit: 200,\n      date_in_series_pattern: false,\n      status: 'upcoming',\n      time: 1582047000000,\n      local_date: '2020-02-18',\n      local_time: '18:30',\n      updated: 1581348429000,\n      utc_offset: 3600000,\n      waitlist_count: 0,\n      yes_rsvp_count: 199,\n      venue: {\n        id: 26166503,\n        name: 'MAN Truck & Bus / RIO',\n        lat: 48.180694580078125,\n        lon: 11.596031188964844,\n        repinned: true,\n        address_1: 'Oskar-Schlemmer-Str. 19-21',\n        city: 'München',\n        country: 'de',\n        localized_country_name: 'Germany'\n      },\n      group: {\n        created: 1400514197000,\n        name: 'Munich AWS User Group',\n        id: 14546712,\n        join_mode: 'open',\n        lat: 48.13999938964844,\n        lon: 11.579999923706055,\n        urlname: 'AWS-Munich',\n        who: 'Members',\n        localized_location: 'München, Germany',\n        state: '',\n        country: 'de',\n        region: 'en_US',\n        timezone: 'Europe/Berlin'\n      },\n      link: 'https://www.meetup.com/AWS-Munich/events/267743487/',\n      description:\n        \"It's only the second month of they year but the usergroup is already back at full throttle - awesome location and great (international) speaker! We're very happy about the sponsorship of RIO The Logistic Flow, the digital brand of TRATON GROUP. They will provide their offices, food and drinks for us.AGENDA: 18:30 - Doors open, networking, drinks, food9:00 - Markus (Team Internet AG) - Recent AWS announcements 19:30 - Massimo Re Ferre’ (AWS Principal Developer Advocate) - Container on AWS - state of the union In this highly interactive session we will cover, with a mix of slides and demos, the latest updates of the container related services AWS unveiled at re:Invent 2019. \",\n      how_to_find_us: 'Canteen, Walter-Gropius-Str. 19',\n      visibility: 'public',\n      member_pay_fee: false\n    },\n    {\n      created: 1581354000000,\n      duration: 10800000,\n      id: '268607198',\n      name: 'Scaling Transformation by Design @ Nokia',\n      rsvp_limit: 1,\n      date_in_series_pattern: false,\n      status: 'upcoming',\n      time: 1582219800000,\n      local_date: '2020-02-20',\n      local_time: '18:30',\n      updated: 1581354337000,\n      utc_offset: 3600000,\n      waitlist_count: 4,\n      yes_rsvp_count: 1,\n      venue: {\n        id: 26854977,\n        name: 'NOKIA Digital Creativity Lab',\n        lat: 48.11524200439453,\n        lon: 11.5970458984375,\n        repinned: false,\n        address_1: 'Werinherstraße 91',\n        city: 'München',\n        country: 'de',\n        localized_country_name: 'Germany'\n      },\n      group: {\n        created: 1559166585000,\n        name: 'Transformation by Design',\n        id: 32061396,\n        join_mode: 'open',\n        lat: 48.13999938964844,\n        lon: 11.579999923706055,\n        urlname: 'Transformation-by-Design',\n        who: 'Members',\n        localized_location: 'München, Germany',\n        state: '',\n        country: 'de',\n        region: 'en_US',\n        timezone: 'Europe/Berlin'\n      },\n      link: 'https://www.meetup.com/Transformation-by-Design/events/268607198/',\n      description:\n        '+++ please register via Design Thinking München: Scaling Transformation by Design. Over the last years, design &amp; design thinking have become the key success factor for many large, global companies, as society has moved from being product-driven to user-centered, from “technology first” to “human first”, from “making people want things” to “making things people want”. Studies have shown that design-driven companies outperform considerably in terms of revenue growth (by 100%+) and Total Return to Shareholder (70%+), the return on investment can be as much as 300%. With this in mind, we decided to develop, test and incubate this approach in Nokia Transformation. We have been doing this during the last 1.5 years, under the name “Transformation by Design”, gathering learnings along the way from more than 70 design projects and sprints, on topics ranging from product innovation, to strategy, to organization redesign.',\n      visibility: 'public',\n      member_pay_fee: false\n    }\n  ]\n};\n\nexport { mockEvents };\n","import axios from 'axios';\nimport { mockEvents } from './mock-events';\n\nasync function getSuggestions(query) {\n  if (window.location.href.startsWith('http://localhost')) {\n    return [\n      {\n        city: 'Munich',\n        country: 'de',\n        localized_country_name: 'Germany',\n        name_string: 'Munich, Germany',\n        zip: 'meetup3',\n        lat: 48.14,\n        lon: 11.58\n      },\n      {\n        city: 'Munich',\n        country: 'us',\n        localized_country_name: 'USA',\n        state: 'ND',\n        name_string: 'Munich, North Dakota, USA',\n        zip: '58352',\n        lat: 48.66,\n        lon: -98.85\n      }\n    ];\n  }\n\n  const token = await getAccessToken();\n  if (token) {\n    const url =\n      'https://api.meetup.com/find/locations?&sign=true&photo-host=public&query=' +\n      query +\n      '&access_token=' +\n      token;\n    const result = await axios.get(url);\n    return result.data;\n  }\n  return [];\n}\n\nasync function getEvents(lat, lon) {\n  if (window.location.href.startsWith('http://localhost')) {\n    return mockEvents.events;\n  }\n  const token = await getAccessToken();\n  if (token) {\n    let url =\n      'https://api.meetup.com/find/upcoming_events?&sign=true&photo-host=public' +\n      '&access_token=' +\n      token;\n    // lat, lon is optional; if you have a lat and lon, you can add them\n    if (lat && lon) {\n      url += '&lat=' + lat + '&lon=' + lon;\n    }\n    const result = await axios.get(url);\n    return result.data.events;\n  }\n}\n\nasync function getAccessToken() {\n  const accessToken = localStorage.getItem('access_token');\n  if (!accessToken) {\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = searchParams.get('code');\n\n    if (!code) {\n      window.location.href =\n        'https://secure.meetup.com/oauth2/authorize?client_id=3jsm2toi92h8a08o038b2o1hh1&response_type=code&redirect_uri=https://elizabethsn7.github.io/meetup-two/';\n      return null;\n    }\n    return getOrRenewAccessToken('get', code);\n  }\n  const lastSavedTime = localStorage.getItem('last_saved_time');\n\n  if (accessToken && Date.now() - lastSavedTime < 3600000) {\n    return accessToken;\n  }\n\n  const refreshToken = localStorage.getItem('refresh_token');\n  return getOrRenewAccessToken('renew', refreshToken);\n}\n\nasync function getOrRenewAccessToken(type, key) {\n  let url;\n  if (type === 'get') {\n    // Lambda endpoint to get token by code\n    url =\n      'https://8f80bb691h.execute-api.us-west-2.amazonaws.com/dev/api/token/' +\n      key;\n  } else if (type === 'renew') {\n    // Lambda endpoint to get token by refresh_token\n    url =\n      'https://8f80bb691h.execute-api.us-west-2.amazonaws.com/dev/api/refreshtoken/' +\n      key;\n  }\n\n  // Use Axios to make a GET request to the endpoint\n  const tokenInfo = await axios.get(url);\n\n  // Save tokens to localStorage together with a timestamp\n  localStorage.setItem('access_token', tokenInfo.data.access_token);\n  localStorage.setItem('refresh_token', tokenInfo.data.refresh_token);\n  localStorage.setItem('last_saved_time', Date.now());\n\n  // Return the access_token\n  return tokenInfo.data.access_token;\n}\nexport { getSuggestions, getEvents };\n","import React, { Component } from 'react';\nimport { getSuggestions } from './api';\n\nclass CitySearch extends Component {\n  state = {\n    query: '',\n    suggestions: [10]\n  };\n\n  handleInputChanged = event => {\n    const value = event.target.value;\n    this.setState({ query: value });\n    getSuggestions(value).then(suggestions => this.setState({ suggestions }));\n  };\n\n  handleItemClicked = (value, lat, lon) => {\n    this.setState({ query: value, suggestions: [] });\n    this.props.updateEvents(lat, lon);\n  };\n\n  render() {\n    return (\n      <div className=\"CitySearch\">\n        <input\n          type=\"text\"\n          className=\"city\"\n          value={this.state.query}\n          onChange={this.handleInputChanged}\n        />\n        <ul className=\"suggestions\">\n          {this.state.suggestions.map(item => (\n            <li\n              key={item.name_string}\n              onClick={() =>\n                this.handleItemClicked(item.name_string, item.lat, item.lon)\n              }>\n              {item.name_string}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default CitySearch;\n","import React, { Component } from 'react';\n\nclass NumberOfEvents extends Component {\n  state = {\n    amount: '10'\n  };\n\n  handleInputChanged = event => {\n    const value = event.target.value;\n    this.setState({ amount: value });\n  };\n\n  render() {\n    return (\n      <div className=\"NumberOfEvents\">\n        <input\n          type=\"text\"\n          className=\"eventsShown\"\n          placeholder=\"Number of events\"\n          value={this.state.amount}\n          onChange={this.handleInputChanged}\n        />\n      </div>\n    );\n  }\n}\n\nexport default NumberOfEvents;\n","import React, { Component } from 'react';\nimport './App.css';\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from './NumberOfEvents';\nimport { getEvents } from './api';\n\nclass App extends Component {\n  state = {\n    events: []\n  };\n\n  updateEvents = (lat, lon) => {\n    getEvents(lat, lon).then(events => this.setState({ events }));\n  };\n  render() {\n    return (\n      <div className=\"App\">\n        <CitySearch updateEvents={this.updateEvents} />\n        <EventList events={this.state.events} />\n        <NumberOfEvents />\n        <EventList events={this.state.events} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { api } from './api';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}