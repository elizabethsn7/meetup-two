{"version":3,"sources":["Event.js","EventList.js","mock-events.js","api.js","Alert.js","CitySearch.js","NumberOfEvents.js","App.js","serviceWorker.js","index.js"],"names":["Event","state","events","showDetails","handleShowDetails","setState","getRSVPData","rsvpCount","props","event","yes_rsvp_count","name","value","rsvp_limit","this","Container","className","local_date","local_time","Button","onClick","dangerouslySetInnerHTML","__html","description","height","width","data","cx","cy","outerRadius","fill","Component","EventList","map","key","id","mockEvents","created","duration","date_in_series_pattern","status","time","updated","utc_offset","waitlist_count","venue","lat","lon","repinned","address_1","city","country","localized_country_name","group","join_mode","urlname","who","localized_location","region","timezone","link","how_to_find_us","visibility","member_pay_fee","getSuggestions","query","a","window","location","href","startsWith","name_string","zip","getAccessToken","token","url","axios","get","result","getEvents","page","navigator","onLine","localStorage","getItem","JSON","parse","length","setItem","stringify","getOrRenewAccessToken","type","tokenInfo","access_token","refresh_token","Date","now","accessToken","searchParams","URLSearchParams","search","code","lastSavedTime","refreshToken","Alert","getStyle","color","style","text","InfoAlert","ErrorAlert","WarningAlert","fontStyle","fontSize","backgroundColor","textAlign","CitySearch","suggestions","handleInputChanged","target","then","infoText","handleItemClicked","updateEvents","onChange","placeholder","item","NumberOfEvents","number","App","warningText","countEventsOnADate","date","count","i","getData","next7Days","currentDate","moment","add","dateString","format","push","Navbar","margin","top","right","bottom","left","dataKey","allowDecimals","cursor","strokeDasharray","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker","atatus","install"],"mappings":"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","file":"static/js/main.75cbf52e.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Button from 'react-bootstrap/Button';\nimport { PieChart, Pie, Tooltip, ResponsiveContainer } from 'recharts';\n\nclass Event extends Component {\n  state = {\n    events: [],\n    showDetails: false\n  };\n\n  handleShowDetails = () => {\n    if (this.state.showDetails === false) {\n      this.setState({ showDetails: true });\n    } else {\n      this.setState({ showDetails: false });\n    }\n  };\n  getRSVPData = () => {\n    let rsvpCount = this.props.event.yes_rsvp_count;\n    let rsvpLimit = this.props.event.rsvp_limit - rsvpCount;\n\n    return [\n      { name: 'Reservations', value: rsvpCount },\n      { name: 'Open Spots', value: rsvpLimit }\n    ];\n  };\n\n  render() {\n    const { event } = this.props;\n    return (\n      <Container>\n        <div className=\"Event\">\n          <div className=\"detailsOverview\">\n            <p className=\"eventName\">Event: {event.name}</p>\n            <p className=\"date\">Date: {event.local_date}</p>\n            <p className=\"time\">Time: {event.local_time}</p>\n\n            <Button\n              className=\"btn details-btn\"\n              onClick={() => this.handleShowDetails()}>\n              More Details\n            </Button>\n          </div>\n          {this.state.showDetails && (\n            <div className=\"expandedDetails\">\n              <p\n                className=\"description\"\n                dangerouslySetInnerHTML={{ __html: event.description }}\n              />\n              <p className=\"rsvpCount\">\n                Number Attending: {event.yes_rsvp_count}\n              </p>\n              <p className=\"rsvpLimit\">RSVP Limit: {event.rsvp_limit}</p>\n              <ResponsiveContainer height={400}>\n                <PieChart width={200} height={200}>\n                  <Pie\n                    data={this.getRSVPData()}\n                    cx={200}\n                    cy={200}\n                    outerRadius={80}\n                    fill=\"#82ca9d\"\n                  />\n                  <Tooltip />\n                </PieChart>\n              </ResponsiveContainer>\n            </div>\n          )}\n        </div>\n      </Container>\n    );\n  }\n}\n\nexport default Event;\n","import React, { Component } from 'react';\nimport Event from './Event';\n\nclass EventList extends Component {\n  render() {\n    return (\n      <ul className=\"EventList\">\n        {this.props.events.map(event => (\n          <li key={event.id}>\n            <Event event={event} />\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n\nexport default EventList;\n","const mockEvents = {\n  city: {\n    id: 1007700,\n    city: 'München',\n    lat: 48.14,\n    lon: 11.58,\n    state: '',\n    country: 'de',\n    zip: 'meetup3',\n    member_count: 1257\n  },\n  events: [\n    {\n      created: 1578477368000,\n      duration: 10800000,\n      id: '267743487',\n      name: 'AWS UG February Event',\n      rsvp_limit: 200,\n      date_in_series_pattern: false,\n      status: 'upcoming',\n      time: 1582047000000,\n      local_date: '2020-03-14',\n      local_time: '18:30',\n      updated: 1581348429000,\n      utc_offset: 3600000,\n      waitlist_count: 0,\n      yes_rsvp_count: 139,\n      venue: {\n        id: 26166503,\n        name: 'MAN Truck & Bus / RIO',\n        lat: 48.180694580078125,\n        lon: 11.596031188964844,\n        repinned: true,\n        address_1: 'Oskar-Schlemmer-Str. 19-21',\n        city: 'München',\n        country: 'de',\n        localized_country_name: 'Germany'\n      },\n      group: {\n        created: 1400514197000,\n        name: 'Munich AWS User Group',\n        id: 14546712,\n        join_mode: 'open',\n        lat: 48.13999938964844,\n        lon: 11.579999923706055,\n        urlname: 'AWS-Munich',\n        who: 'Members',\n        localized_location: 'München, Germany',\n        state: '',\n        country: 'de',\n        region: 'en_US',\n        timezone: 'Europe/Berlin'\n      },\n      link: 'https://www.meetup.com/AWS-Munich/events/267743487/',\n      description:\n        \"<p>Dripping Springs Toastmasters' Club wishes to extend a warm welcome to the community and an invitation to visit our club. We meet each Tuesday evening at 6:30 for about an hour in the Pioneer Bank Building (west side entrance). Bank is located at 100 Creek Road or at the corner of Creek Road and US HWY 290W (west of intersection of RR12). (Google Maps prefers to call as County Road 190)</p> <p>Our mission is to promote personal public speaking ability and leadership skills within each member of the club. Everyone has a beginning. No one person's goals are the same as another. Yet the Toastmasters' model develops each individual at their pace and ability.</p>\",\n      how_to_find_us: 'Canteen, Walter-Gropius-Str. 19',\n      visibility: 'public',\n      member_pay_fee: false\n    },\n    {\n      created: 1581354000000,\n      duration: 10800000,\n      id: '268607198',\n      name: 'Scaling Transformation by Design @ Nokia',\n      rsvp_limit: 10,\n      date_in_series_pattern: false,\n      status: 'upcoming',\n      time: 1582219800000,\n      local_date: '2020-03-13',\n      local_time: '18:30',\n      updated: 1581354337000,\n      utc_offset: 3600000,\n      waitlist_count: 4,\n      yes_rsvp_count: 5,\n      venue: {\n        id: 26854977,\n        name: 'NOKIA Digital Creativity Lab',\n        lat: 48.11524200439453,\n        lon: 11.5970458984375,\n        repinned: false,\n        address_1: 'Werinherstraße 91',\n        city: 'München',\n        country: 'de',\n        localized_country_name: 'Germany'\n      },\n      group: {\n        created: 1559166585000,\n        name: 'Transformation by Design',\n        id: 32061396,\n        join_mode: 'open',\n        lat: 48.13999938964844,\n        lon: 11.579999923706055,\n        urlname: 'Transformation-by-Design',\n        who: 'Members',\n        localized_location: 'München, Germany',\n        state: '',\n        country: 'de',\n        region: 'en_US',\n        timezone: 'Europe/Berlin'\n      },\n      link: 'https://www.meetup.com/Transformation-by-Design/events/268607198/',\n      description:\n        \"<p>Dripping Springs Toastmasters' Club wishes to extend a warm welcome to the community and an invitation to visit our club. We meet each Tuesday evening at 6:30 for about an hour in the Pioneer Bank Building (west side entrance). Bank is located at 100 Creek Road or at the corner of Creek Road and US HWY 290W (west of intersection of RR12). (Google Maps prefers to call as County Road 190)</p> <p>Our mission is to promote personal public speaking ability and leadership skills within each member of the club. Everyone has a beginning. No one person's goals are the same as another. Yet the Toastmasters' model develops each individual at their pace and ability.</p><p>Dripping Springs Toastmasters' Club wishes to extend a warm welcome to the community and an invitation to visit our club. We meet each Tuesday evening at 6:30 for about an hour in the Pioneer Bank Building (west side entrance). Bank is located at 100 Creek Road or at the corner of Creek Road and US HWY 290W (west of intersection of RR12). (Google Maps prefers to call as County Road 190)</p>\",\n      visibility: 'public',\n      member_pay_fee: false\n    }\n  ]\n};\n\nexport { mockEvents };\n","import axios from 'axios';\nimport { mockEvents } from './mock-events';\n\nasync function getSuggestions(query) {\n  if (window.location.href.startsWith('http://localhost')) {\n    return [\n      {\n        city: 'Munich',\n        country: 'de',\n        localized_country_name: 'Germany',\n        name_string: 'Munich, Germany',\n        zip: 'meetup3',\n        lat: 48.14,\n        lon: 11.58\n      },\n      {\n        city: 'Munich',\n        country: 'us',\n        localized_country_name: 'USA',\n        state: 'ND',\n        name_string: 'Munich, North Dakota, USA',\n        zip: '58352',\n        lat: 48.66,\n        lon: -98.85\n      }\n    ];\n  }\n\n  const token = await getAccessToken();\n  if (token) {\n    const url =\n      'https://api.meetup.com/find/locations?&sign=true&photo-host=public&query=' +\n      query +\n      '&access_token=' +\n      token;\n    const result = await axios.get(url);\n    return result.data;\n  }\n  return [];\n}\n\nasync function getEvents(lat, lon, page) {\n  if (window.location.href.startsWith('http://localhost')) {\n    return mockEvents.events;\n  }\n\n  if (!navigator.onLine) {\n    const events = localStorage.getItem('lastEvents');\n    return JSON.parse(events);\n  }\n\n  const token = await getAccessToken();\n\n  if (token) {\n    let url =\n      'https://api.meetup.com/find/upcoming_events?&sign=true&photo-host=public' +\n      '&access_token=' +\n      token;\n    // lat, lon is optional; if you have a lat and lon, you can add them\n    if (lat && lon) {\n      url += '&lat=' + lat + '&lon=' + lon;\n    }\n    if (page) {\n      url += '&page=' + page;\n    }\n    if (lat && lon && page) {\n      url += '&lat=' + lat + '&lon=' + lon + '&page=' + page;\n    }\n    const result = await axios.get(url);\n    const events = result.data.events;\n    if (events.length) {\n      // Check if the events exist\n      // The JSON.stringify() function will convert the list into a string, allowing it to be stored in localStorage. It will then need to be parsed later using the JSON.parse() function when it’s loaded from localStorage. The (stringified) list is stored under the key lastEvents.\n      localStorage.setItem('lastEvents', JSON.stringify(events));\n    }\n    return events;\n  }\n}\n\nasync function getOrRenewAccessToken(type, key) {\n  let url;\n  if (type === 'get') {\n    // Lambda endpoint to get token by code\n    url =\n      'https://8f80bb691h.execute-api.us-west-2.amazonaws.com/dev/api/token/' +\n      key;\n  } else if (type === 'renew') {\n    // Lambda endpoint to get token by refresh_token\n    url =\n      'https://8f80bb691h.execute-api.us-west-2.amazonaws.com/dev/api/refreshtoken/' +\n      key;\n  }\n\n  // Use Axios to make a GET request to the endpoint\n  const tokenInfo = await axios.get(url);\n\n  // Save tokens to localStorage together with a timestamp\n  localStorage.setItem('access_token', tokenInfo.data.access_token);\n  localStorage.setItem('refresh_token', tokenInfo.data.refresh_token);\n  localStorage.setItem('last_saved_time', Date.now());\n\n  // Return the access_token\n  return tokenInfo.data.access_token;\n}\n\nasync function getAccessToken() {\n  const accessToken = localStorage.getItem('access_token');\n  if (!accessToken) {\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = searchParams.get('code');\n\n    if (!code) {\n      window.location.href =\n        'https://secure.meetup.com/oauth2/authorize?client_id=3jsm2toi92h8a08o038b2o1hh1&response_type=code&redirect_uri=https://elizabethsn7.github.io/meetup-two/';\n      return null;\n    }\n    return getOrRenewAccessToken('get', code);\n  }\n  const lastSavedTime = localStorage.getItem('last_saved_time');\n\n  if (accessToken && Date.now() - lastSavedTime < 3600000) {\n    return accessToken;\n  }\n\n  const refreshToken = localStorage.getItem('refresh_token');\n  return getOrRenewAccessToken('renew', refreshToken);\n}\n\nexport { getSuggestions, getEvents };\n","import React, { Component } from 'react';\n\nclass Alert extends Component {\n  constructor(props) {\n    super(props);\n    this.color = null;\n  }\n  getStyle = () => {\n    return {\n      color: this.color\n    };\n  };\n  render() {\n    return (\n      //  You can set the color of Alert to be null by default its children will override this later. This component attempts to render text it receives from its props, using the style from its getStyle function which defines a basic style for the color\n      <div className=\"Alert\">\n        <p style={this.getStyle()}>{this.props.text}</p>\n      </div>\n    );\n  }\n}\n\nclass InfoAlert extends Alert {\n  constructor(props) {\n    super(props);\n    this.color = '#b52424';\n  }\n}\n\nclass ErrorAlert extends Alert {\n  constructor(props) {\n    super(props);\n    this.color = '#b52424';\n  }\n}\n\nclass WarningAlert extends Alert {\n  constructor(props) {\n    super(props);\n    this.color = '#fff';\n  }\n\n  getStyle = () => {\n    return {\n      color: this.color,\n      fontStyle: 'italic',\n      fontSize: '1.5em',\n      backgroundColor: '#e63070',\n      textAlign: 'center'\n    };\n  };\n}\n\nexport { InfoAlert, ErrorAlert, WarningAlert };\n","import React, { Component } from 'react';\nimport { getSuggestions } from './api';\nimport { InfoAlert } from './Alert';\n\nclass CitySearch extends Component {\n  state = {\n    query: '',\n    suggestions: []\n  };\n\n  handleInputChanged = event => {\n    const value = event.target.value;\n    this.setState({ query: value });\n    getSuggestions(value).then(suggestions => {\n      this.setState({ suggestions });\n      if (value && suggestions.length === 0) {\n        this.setState({\n          infoText:\n            'We can not find the city you are looking for. Please try another city.'\n        });\n      } else {\n        this.setState({\n          infoText: ''\n        });\n      }\n    });\n  };\n\n  handleItemClicked = (value, lat, lon) => {\n    this.setState({ query: value, suggestions: [] });\n    this.props.updateEvents(lat, lon);\n  };\n\n  render() {\n    return (\n      <div className=\"CitySearch\">\n        <InfoAlert text={this.state.infoText} />\n        <input\n          type=\"text\"\n          className=\"city\"\n          value={this.state.query}\n          onChange={this.handleInputChanged}\n          placeholder=\"Enter Location\"\n        />\n        <ul className=\"suggestions\">\n          {this.state.suggestions.map(item => (\n            <li\n              key={item.name_string}\n              onClick={() =>\n                this.handleItemClicked(item.name_string, item.lat, item.lon)\n              }>\n              {item.name_string}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default CitySearch;\n","import React, { Component } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport { ErrorAlert } from './Alert';\n\nclass NumberOfEvents extends Component {\n  state = {\n    number: 32\n  };\n\n  handleInputChanged = event => {\n    const value = event.target.value;\n    this.setState({ number: value });\n    this.props.updateEvents(null, null, value);\n\n    if (value < 1) {\n      this.setState({\n        infoText: 'Please enter a number of 1 or greater'\n      });\n    } else {\n      this.setState({\n        infoText: ''\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"NumberOfEvents\">\n        <ErrorAlert text={this.state.infoText} />\n        <Container>\n          <span>Show</span>\n          <input\n            type=\"number\"\n            className=\"eventsShown\"\n            placeholder=\"32\"\n            value={this.state.number}\n            onChange={this.handleInputChanged}\n          />\n          <span>Results</span>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default NumberOfEvents;\n","import React, { Component } from 'react';\nimport './App.css';\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from './NumberOfEvents';\nimport { getEvents } from './api';\nimport Container from 'react-bootstrap/Container';\nimport Navbar from 'react-bootstrap/Navbar';\nimport { WarningAlert } from './Alert';\nimport moment from 'moment';\nimport {\n  ScatterChart,\n  Scatter,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  ResponsiveContainer\n} from 'recharts';\n\nclass App extends Component {\n  state = {\n    events: [],\n    page: null,\n    lat: null,\n    lon: null,\n    warningText: ''\n  };\n  componentDidMount() {\n    this.updateEvents();\n  }\n\n  updateEvents = (lat, lon, page) => {\n    if (navigator.onLine === false) {\n      this.setState({\n        warningText: 'You are no longer online'\n      });\n    } else {\n      this.setState({ warningText: '' });\n    }\n    if (lat && lon) {\n      getEvents(lat, lon, this.state.page).then(events =>\n        this.setState({ events, lat, lon })\n      );\n    } else if (page) {\n      getEvents(this.state.lat, this.state.lon, page).then(events =>\n        this.setState({ events, page })\n      );\n    } else {\n      getEvents(this.state.lat, this.state.lon, this.state.page).then(events =>\n        this.setState({ events })\n      );\n    }\n  };\n\n  countEventsOnADate = date => {\n    let count = 0;\n    for (let i = 0; i < this.state.events.length; i += 1) {\n      if (this.state.events[i].local_date === date) {\n        count += 1;\n      }\n    }\n    return count;\n  };\n\n  getData = () => {\n    const next7Days = [];\n    const currentDate = moment();\n    for (let i = 0; i < 7; i += 1) {\n      currentDate.add(1, 'days');\n      const dateString = currentDate.format('YYYY-MM-DD');\n      const count = this.countEventsOnADate(dateString);\n      next7Days.push({ date: dateString, number: count }); // Add this date and number to the list\n    }\n    return next7Days;\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Navbar className=\"brand\">Meetup</Navbar>\n        <WarningAlert text={this.state.warningText} />\n        <Container>\n          <CitySearch updateEvents={this.updateEvents} />\n          <NumberOfEvents updateEvents={this.updateEvents} />\n          <ResponsiveContainer height={400}>\n            <ScatterChart\n              width={800}\n              height={400}\n              margin={{\n                top: 20,\n                right: 20,\n                bottom: 20,\n                left: 20\n              }}>\n              <CartesianGrid />\n              <XAxis type=\"category\" dataKey=\"date\" />\n              {/* the YAxis represents the number of events on that date */}\n              <YAxis\n                type=\"number\"\n                dataKey=\"number\"\n                name=\"Number of Events\"\n                allowDecimals={false}\n              />\n              <Tooltip cursor={{ strokeDasharray: '3 3' }} />\n              <Scatter data={this.getData()} fill=\"#8884d8\" />\n            </ScatterChart>\n          </ResponsiveContainer>\n          <EventList events={this.state.events} />\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport * as atatus from 'atatus-js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\natatus.config('73f1f9fd9b124abb89885caa1e94cd11').install();\n"],"sourceRoot":""}